{"version":3,"sources":["Components/Menu.js","config/config.js","Components/GetAllMemes.js","Components/Footer.js","App.js","index.js"],"names":["Menu","className","href","config","baseUrl","GetAllMemes","state","id","name","caption","url","meme","loading","addLoading","updateLoading","alertData","alertAddData","error","setState","axios","method","headers","then","data","response","message","map","catch","console","log","validation","DeleteMeme","alert","updateMeme","submitMemeUpdate","addMeme","change","e","target","value","this","tabIndex","aria-labelledby","aria-hidden","type","data-bs-dismiss","aria-label","htmlFor","onChange","placeholder","required","role","onClick","data-bs-toggle","data-bs-target","loaded","length","src","alt","Component","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6d1c29c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Menu = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          XMeme\n        </a>\n        {/* <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                Home\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                Features\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                Pricing\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link disabled\"\n                href=\"#\"\n                // tabIndex=\"-1\"\n                aria-disabled=\"true\"\n              >\n                Disabled\n              </a>\n            </li>\n          </ul>\n        </div> */}\n      </div>\n    </nav>\n  );\n};\n\nexport default Menu;\n","const config = {\n    baseUrl: \"https://xmeme-sg.herokuapp.com\",\n}\n\nexport default config;","import React, { Component } from \"react\";\nimport Loader from \"react-loader\";\nimport axios from \"axios\";\nimport config from \"../config/config\";\nimport \"./styles.css\";\n\nconst baseUrl = config.baseUrl;\n\nclass GetAllMemes extends Component {\n  state = {\n    id: null,\n    name: \"\",\n    caption: \"\",\n    url: \"\",\n    meme: [],\n    loading: false,\n    addLoading: false,\n    updateLoading: false,\n    alertData: null,\n    alertAddData: null,\n    error: null,\n  };\n\n  GetAllMemes = () => {\n    this.setState({\n      error: \"\",\n      name: \"\",\n      caption: \"\",\n      url: \"\",\n    });\n\n    axios({\n      method: \"GET\",\n      url: `${baseUrl}/memes`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((data) => {\n        const response = data.data.message;\n\n        this.setState({\n          meme: response.map((meme) => {\n            return [meme.id, meme.name, meme.caption, meme.url];\n          }),\n          loading: true,\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error \", error);\n      });\n  };\n\n  componentDidMount() {\n    return this.GetAllMemes();\n  }\n\n  validation = () => {\n    this.setState({\n      error: \"\",\n    });\n\n    if (this.state.name === \"\") {\n      this.setState({\n        error: \"Name is required\",\n      });\n      return false;\n    }\n    if (this.state.caption === \"\") {\n      this.setState({\n        error: \"Caption is required\",\n      });\n      return false;\n    }\n    if (this.state.url === \"\") {\n      this.setState({\n        error: \"Url is required\",\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  DeleteMeme = (id) => {\n    console.log(\"ID: \", id);\n    axios({\n      method: \"DELETE\",\n      url: `${baseUrl}/delete-meme/${id}`,\n    })\n      .then((response) => {\n        console.log(\"Meme deleted: \", response);\n        alert(\"Meme deleted successfully\");\n        this.GetAllMemes();\n      })\n      .catch((error) => {\n        console.log(\"Error in deleting meme: \", error);\n      });\n  };\n\n  updateMeme = (id, name, caption, url) => {\n    // console.log(id, name, caption, url)\n    this.setState({\n      id,\n      name,\n      caption,\n      url,\n    });\n  };\n\n  submitMemeUpdate = () => {\n    const data = {\n      name: this.state.name,\n      caption: this.state.caption,\n      url: this.state.url,\n    };\n\n    if (this.validation()) {\n      axios({\n        method: \"PATCH\",\n        url: `${baseUrl}/update-meme/${this.state.id}`,\n        data,\n      })\n        .then((response) => {\n          console.log(\"Meme update: \", response);\n          this.setState({\n            updateLoading: true,\n            alertData: \"Meme Updated Successfully 🙂\",\n            name: null,\n            caption: null,\n            url: null,\n          });\n          this.GetAllMemes();\n        })\n        .catch((error) => {\n          alert(\"Can't update the meme. Please try again later.\");\n          console.log(\"Error: \", error);\n        });\n    }\n  };\n\n  addMeme = () => {\n    const data = {\n      name: this.state.name,\n      caption: this.state.caption,\n      url: this.state.url,\n    };\n\n    if (this.validation()) {\n      axios({\n        method: \"POST\",\n        data,\n        url: `${baseUrl}/memes`,\n      })\n        .then((response) => {\n          this.setState({\n            addLoading: true,\n            name: null,\n            caption: null,\n            url: null,\n          });\n          this.setState(\n            {\n              alertAddData: \"Meme Added Successfully 🙂\",\n            },\n            () => this.GetAllMemes()\n          );\n\n          if (response.data.message == \"This meme is already present\") {\n            this.setState({\n              alertAddData: \"This meme is already present\",\n            });\n          }\n        })\n        .catch((error) => {\n          console.log(\"Error: \", error);\n          alert(\"Can't add the meme. Please try again.\");\n        });\n    }\n  };\n\n  change = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        {/* Add a meme */}\n        <div\n          className=\"modal fade\"\n          id=\"exampleModal1\"\n          tabIndex=\"-1\"\n          aria-labelledby=\"exampleModal1Label\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"exampleModal1Label\">\n                  Add a Meme\n                </h5>\n                <button\n                  type=\"button\"\n                  className=\"btn-close\"\n                  data-bs-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                ></button>\n              </div>\n              <div className=\"modal-body\">\n                <form>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"InputEmail1\" className=\"form-label\">\n                      Name\n                    </label>\n                    <input\n                      value={this.state.name}\n                      name=\"name\"\n                      onChange={(e) => this.change(e)}\n                      placeholder=\"Enter your name\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      // id=\"InputEmail1\"\n                      required\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"InputPassword1\" className=\"form-label\">\n                      Caption\n                    </label>\n                    <input\n                      value={this.state.caption}\n                      name=\"caption\"\n                      onChange={(e) => this.change(e)}\n                      placeholder=\"Enter the caption\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      // id=\"InputPassword1\"\n                      required\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"ImageUrl\" className=\"form-label\">\n                      Image Url\n                    </label>\n                    <input\n                      value={this.state.url}\n                      name=\"url\"\n                      onChange={(e) => this.change(e)}\n                      placeholder=\"Enter the Image Url\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      // id=\"ImageUrl\"\n                      required\n                    />\n                  </div>\n                </form>\n                {this.state.addLoading ? (\n                  <div className=\"alert alert-success\" role=\"alert\">\n                    {this.state.alertAddData}\n                  </div>\n                ) : null}\n\n                {this.state.error ? (\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.state.error}\n                  </div>\n                ) : null}\n              </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-bs-dismiss=\"modal\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={this.addMeme}\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Update Meme Modal */}\n        <div\n          className=\"modal fade\"\n          id=\"exampleModal\"\n          tabIndex=\"5\"\n          aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                  Update the Meme\n                </h5>\n                <button\n                  type=\"button\"\n                  className=\"btn-close\"\n                  data-bs-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                ></button>\n              </div>\n              <div className=\"modal-body\">\n                <form>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"InputEmail1\" className=\"form-label\">\n                      Name\n                    </label>\n                    <input\n                      value={this.state.name}\n                      name=\"name\"\n                      onChange={(e) => this.change(e)}\n                      placeholder=\"Enter your name\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      required\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"InputPassword1\" className=\"form-label\">\n                      Caption\n                    </label>\n                    <input\n                      value={this.state.caption}\n                      name=\"caption\"\n                      onChange={(e) => this.change(e)}\n                      placeholder=\"Enter the caption\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      required\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"ImageUrl\" className=\"form-label\">\n                      Image Url\n                    </label>\n                    <input\n                      value={this.state.url}\n                      name=\"url\"\n                      onChange={(e) => this.change(e)}\n                      placeholder=\"Enter the Image Url\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      required\n                    />\n                  </div>\n                </form>\n              </div>\n              {this.state.updateLoading ? (\n                <div className=\"alert alert-success\" role=\"alert\">\n                  {this.state.alertData}\n                </div>\n              ) : null}\n\n              {this.state.error ? (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.error}\n                </div>\n              ) : null}\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-bs-dismiss=\"modal\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={this.submitMemeUpdate}\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                >\n                  Update\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"text-center mt-5\">\n          <input\n            type=\"button\"\n            value=\"Add a Meme\"\n            className=\"btn btn-primary rounded-pill button\"\n            data-bs-toggle=\"modal\"\n            data-bs-target=\"#exampleModal1\"\n          />\n        </div>\n        <div className=\"container mt-4 mainContainer\">\n          <div className=\"row\">\n            <Loader loaded={this.state.loading}>\n              {this.state.meme.length > 0 ? (\n                this.state.meme.map((name) => {\n                  return (\n                    <div className=\"col-lg-6 m-3\" key={name[0]}>\n                      <div className=\"row\">\n                        <div className=\"col-6\">\n                          <b>{name[1]}</b>\n                        </div>\n                        <div className=\"col-6 d-flex justify-content-end\">\n                          <a\n                            data-bs-toggle=\"modal\"\n                            data-bs-target=\"#exampleModal\"\n                            onClick={() =>\n                              this.updateMeme(\n                                name[0],\n                                name[1],\n                                name[2],\n                                name[3]\n                              )\n                            }\n                          >\n                            <i\n                              className=\"fas fa-edit edit-icon\"\n                              // onClick={() =>\n                              //   this.updateMeme(\n                              //     name[0],\n                              //     name[1],\n                              //     name[2],\n                              //     name[3]\n                              //   )\n                              // }\n                            />\n                          </a>\n                          <i\n                            className=\"far fa-trash-alt delete-icon\"\n                            onClick={() => this.DeleteMeme(name[0])}\n                          ></i>\n                        </div>\n                      </div>\n                      <div className=\"caption\">{name[2]}</div>\n                      <img src={`${name[3]}`} alt={name[1]} className=\"image\" />\n                    </div>\n                  );\n                })\n              ) : (\n                <div className=\"text-center\">\n                  <b>No Meme Added..</b>\n                </div>\n              )}\n            </Loader>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default GetAllMemes;\n","import React from 'react'\nimport './styles.css'\n\nconst Footer = () => {\n    return (\n        <div className='footer mt-5 text-center pt-2'>\n            Made by ❤️ Shlok Garg \n        </div>\n    )\n}\n\nexport default Footer\n","import \"./App.css\";\nimport Menu from \"./Components/Menu\";\nimport GetAllMemes from \"./Components/GetAllMemes\";\nimport Footer from \"./Components/Footer\";\n\nconst App = () => {\n  return (\n      <div className=\"App\">\n        <Menu />\n        <GetAllMemes />\n        <Footer />\n      </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}